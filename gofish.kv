#:kivy 2.3.0

<MainMenu>:
    md_bg_color: self.theme_cls.surfaceColor
    MDFloatLayout:
        Image: #UI image
            source: "Icon.png"
            pos_hint: {"center_x": 0.5, "center_y": 0.8}
            size_hint: None, None
            size: "250dp", "250dp"
            fit_mode: "scale-down"
        MDLabel: #Title
            width: root.width
            height: root.height*0.3
            halign: "center"
            text: "Go Fish!"
            font_style: "cataway"
            role: "large"
            pos_hint: {"center_x": 0.5, "center_y": 0.7}
        MDBoxLayout:
            orientation: 'vertical'
            pos_hint: {'center_x': .5, 'center_y': .4}
            adaptive_size: True
            spacing: dp(20)
            MDButton:
                style: "tonal"
                pos_hint: {"center_x": 0.5}
                on_release: 
                    app.sm_stacky("Menu")
                    root.manager.current = "NewGame"
                MDButtonText:
                    text: "New Game"
                    font_style: "cataway"
                    role: "small"
            MDButton:
                style: "tonal"
                pos_hint: {"center_x": 0.5}
                on_release: 
                    app.sm_stacky("Menu")
                    root.manager.current = "Stats"
                MDButtonText:
                    text: "Game Statistics"
                    font_style: "cataway"
                    role: "small"
            MDButton:
                style: "tonal"
                pos_hint: {"center_x": 0.5}
                on_release: 
                    app.sm_stacky("Menu")
                    root.manager.current = "Rules"
                MDButtonText:
                    text: "How to Play"
                    font_style: "cataway"
                    role: "small"
            MDButton:
                style: "tonal"
                pos_hint: {"center_x": 0.5}
                on_release: app.stop()
                MDButtonText:
                    text: "Exit Game"
                    font_style: "cataway"
                    role: "small"

        MDIconButton: #Settings Button
            pos_hint: {"right":0.98, "top": 0.98}
            size: dp(48), dp(48)
            icon: "menu"
            on_release: 
                app.sm_stacky("Menu")
                root.manager.current = "Settings"



<NewGame>:
    md_bg_color: self.theme_cls.surfaceColor
    MDFloatLayout:
        id: test
        MDLabel:
            text: "Enter Players Names!"
            font_style: "cataway"
            role: "large"
            halign: "center"
            pos_hint: {"center_y":0.9, "center_x":0.5}
            adaptive_height: True
        MDTextField:
            id: Input
            pos_hint: {"center_y":0.7, "center_x":0.5}
            size_hint_x: 0.5
            mode: "filled"
            on_text_validate: app.all_players(self)
            MDTextFieldHintText:
                text: "Playing solo? Just enter your name!"
        MDBoxLayout:
            id: Players
            orientation: 'vertical'
            pos_hint: {"center_x": 0.5, "top": 0.3}
            size_hint: None, None
            width: root.width * 0.5
            spacing: "10dp"
        MDButton:
            pos_hint: {"top":0.1, "center_x":0.5}
            adaptive_height: True
            on_release: 
                app.start()
                root.manager.current = "InGame"
            MDButtonText:
                text: "Start!"
                font_style: "cataway"
                role: "large"
        MDIconButton: #Back button
            pos_hint: {"left":0.98, "top": 0.98}
            size: dp(48), dp(48)
            icon: "arrow-left"
            on_release: 
                app.back()
        MDIconButton: #Settings Button
            pos_hint: {"right":0.98, "top": 0.98}
            size: dp(48), dp(48)
            icon: "menu"
            on_release: 
                app.sm_stacky("NewGame")
                root.manager.current = "Settings"

<InGame>:
    md_bg_color: self.theme_cls.backgroundColor
    MDFloatLayout:
        id: dis
        RelativeLayout:
            id: deck
            adaptive_height: True
            pos_hint: {"center_x": 0.5,"center_y":0.5}
            size_hint_x: 0.2
            size_hint_y: 0.2
        MDBoxLayout:
            orientation: "horizontal"
            id: playerview
            adaptive_height: True
            pos_hint: {"center_x": 0.5,"center_y":0.1}
            size_hint_x: 1
            size_hint_y: 0.2
            HandLayout:
                id: hand
                orientation: "horizontal"
                pos_hint: {"left": 1}
                width: (self.parent.width - dp(100))
            

<Rules>:
    md_bg_color: self.theme_cls.backgroundColor
    MDFloatLayout:
        MDScrollView:
            do_scroll_x: False
            do_scroll_y: True
            MDBoxLayout:
                orientation: 'vertical'
                padding: "20dp"
                spacing: "20dp"
                height: self.minimum_height
                size_hint_y: None
                MDLabel:
                    text: "How to Play!"
                    font_style: "cataway"
                    role: "large"
                    halign: 'center'
                    valign: "top"
                    pos_hint: {"top":0.9, "center_x":0.5}
                    size_hint: None, None
                    height: self.texture_size[1]
                    text_size: self.width*10, None
                MDLabel:
                    text: "Go Fish is a classic playing card game where the winner is the player with the most sets.\nA set is four of the same rank of card. For example, four queens in hand is one set.\nTo get sets, players must ask for a card they have on their turn - click a card in your hand then click the player you suspect has that card.\nIf the player is correct, they get another turn else they are told to 'go fish'.\nThis means the player must draw from the deck (if possible).\nOnce they do this their turn is over and the game continues until the deck is empty and all cards have been collected into sets."
                    halign: "center"
                    valign: "top"
                    markup: True
                    size_hint_x: 0.8
                    pos_hint: {"center_x": 0.5}
                    text_size: self.width, None
                    size_hint_y: None
                    height: self.texture_size[1]
                    font_style: "cataway"
                    role: "medium"
                    theme_font_size: "Custom"
                    font_size: dp(30)
                    shorten: False
        MDIconButton: #Back button
            pos_hint: {"center_x":0.05, "center_y": 0.95}
            size: dp(48), dp(48)
            icon: "arrow-left"
            on_release: 
                app.back()
        MDIconButton: #Settings Button\
            pos_hint: {"center_x":0.95, "center_y": 0.95}
            size: dp(48), dp(48)
            icon: "menu"
            on_release: 
                app.sm_stacky("Rules")
                root.manager.current = "Settings"

<Themes>:
    md_bg_color: self.theme_cls.backgroundColor
    MDFloatLayout:
        MDScrollView: #Themes
            do_scroll_x: False
            do_scroll_y: True
            pos_hint: {"center_x":0.5, "top": 0.95}
            size_hint: 1, 1
            MDBoxLayout:
                orientation: "vertical"
                size_hint_y: None
                adaptive_height: True
                padding: [dp(self.width%64), dp(50), dp(50), dp(50)]
                spacing: dp(12)
                MDLabel:
                    text: "Card Themes!"
                    width: self.parent.width
                    height: self.parent.height*0.3
                    font_style: "cataway"
                    role: "large"
                    pos_hint: {"center_x":0.5, "center_y": 0.8}
                MDGridLayout:
                    pos_hint: {"center_x":0.5}
                    md_bg_color: app.theme_cls.surfaceColor
                    id: grid
                    cols: 1 if int((self.width / 64) -2) <= 0 else (int((self.width / 64) -1))
                    adaptive_height: True
                    size_hint_y: None
                    spacing: dp(12)
                    padding: [dp(self.width%64), dp(20), dp(20), dp(20)]
                    on_size:
                        self.cols = 1 if int((self.width / 64) -2) <= 0 else (int((self.width / 64) -1))
        MDIconButton: #Back button
            pos_hint: {"center_x":0.05, "center_y": 0.95}
            size: dp(48), dp(48)
            icon: "arrow-left"
            on_release: 
                app.back()
        MDIconButton: #Change Theme Button
            name: "light"
            style: "tonal"
            icon: "white-balance-sunny"
            pos_hint: {"center_x":0.95, "center_y": 0.95}
            on_release: 
                app.switch_icon(self)
                app.theme_cls.switch_theme()

<Stats>:
    md_bg_color: self.theme_cls.surfaceColor
    MDFloatLayout:
        MDIconButton: #Back button
            pos_hint: {"left":0.98, "top": 0.98}
            size: dp(48), dp(48)
            icon: "arrow-left"
            on_release: 
                app.back()
        MDIconButton: #Settings Button
            pos_hint: {"right":0.98, "top": 0.98}
            size: dp(48), dp(48)
            icon: "menu"
            on_release: 
                app.sm_stacky("Stats")
                root.manager.current = "Settings"


<Settings>:
    md_bg_color: self.theme_cls.backgroundColor
    MDFloatLayout:
        MDLabel:
            text: "Bot Difficulty"
            adaptive_height: True
            pos_hint: {"center_x":0.5, "top":0.9}
            font_style: "cataway"
            role: "large"
            halign: "center"

        MDBoxLayout:
            orientation: "horizontal"
            adaptive_height: True
            size_hint_x: 0.8
            size_hint_y: 0.1
            spacing: dp(5)
            pos_hint: {"center_x":0.5, "top":0.6}
            MDIconButton:
                style: "tonal"
                icon: "chevron-double-left"
                pos_hint: {"center_x":0.2}
                on_release: app.left()
            Carousel:
                id: loop
                direction: "right"
                loop: "true"
                pos_hint: {"center_x":0.5, "center_y":0.5, "right":0.5}
                MDLabel:
                    text: "Beginner"
                    font_style: "cataway"
                    role: "small"
                    halign: "center"
                    valign: "center"
                MDLabel:
                    text: "Easy"
                    font_style: "cataway"
                    role: "small"
                    halign: "center"
                    valign: "center"
                MDLabel:
                    text: "Medium"
                    font_style: "cataway"
                    role: "small"
                    halign: "center"
                    valign: "center"
                MDLabel:
                    text: "Hard"
                    font_style: "cataway"
                    role: "small"
                    halign: "center"
                    valign: "center"
                MDLabel:
                    text: "Expert"
                    font_style: "cataway"
                    role: "small"
                    halign: "center"
                    valign: "center"
            MDIconButton:
                style: "tonal"
                icon: "chevron-double-right"
                pos_hint: {"center_x":0.8}
                on_release: app.right()
        MDBoxLayout:
            orientation: "horizontal"
            adaptive_height: True
            adaptive_width: True
            spacing: dp(20)
            pos_hint: {"center_x":0.5, "top": 0.3}
            MDIconButton: #Change Light/Dark Button
                name: "light"
                style: "tonal"
                icon: "white-balance-sunny"
                on_release: 
                    app.switch_icon(self)
                    app.theme_cls.switch_theme()
            MDIconButton: #Change Theme Button
                style: "tonal"
                icon: "palette"
                on_release: 
                    app.sm_stacky("Settings")
                    root.manager.current = "Themes"
            MDIconButton: #Go to how to play
                style: "tonal"
                icon: "help"
                on_release: 
                    app.sm_stacky("Settings")
                    root.manager.current = "Rules"
            MDIconButton: #Go to Game stats
                name: "light"
                style: "tonal"
                icon: "chart-donut"
                on_release: 
                    app.sm_stacky("Settings")
                    root.manager.current = "Stats"
        MDButton:
            style: "tonal"
            pos_hint: {"center_x": 0.5, "top":0.1}
            on_release: app.stop()
            MDButtonText:
                text: "Exit Game"
                font_style: "cataway"
                role: "small"
            MDButtonIcon:
                icon: "exit-to-app"

        MDIconButton: #Back Button
            pos_hint: {"right":0.98, "top": 0.98}
            size: dp(48), dp(48)
            icon: "backburger"
            on_release: app.back()

